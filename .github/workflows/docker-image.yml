name: Docker Image CI

on:
  push:
    branches: [ master, dev-build ]

env:
  ORG: timescale # timescaledev
  
jobs:

  # Build multi-arch TimescaleDB images for both TSL and OSS code.
  timescaledb:

    name: PG${{ matrix.pg }}${{ matrix.oss }}
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        pg: [ 9.6, 10, 11, 12 ]
        oss: [ "", "-oss" ]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v2.0.0
      with:
        skip-cache: false

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin

    - name: Build and push multi-platform Docker image for TimescaleDB
      run: make multi${{ matrix.oss }} ORG=$ORG PG_VER=pg${{ matrix.pg }}

  # Build bitnami images of TimscaleDB. 
  # The images are built only for amd64, since it is the only supported architecture in the base image bitname/postgresql.
  # The images are only built for TSL code.
  timescaledb-bitnami:

    name: PG${{ matrix.pg }}-bitnami
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        pg: [ 9.6, 10, 11, 12 ]

    steps:
    - uses: actions/checkout@v2

    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin

    - name: Build and push amd64 Docker image for TimescaleDB bitnami
      run: make push ORG=$ORG PG_VER=pg${{ matrix.pg }}
      working-directory: bitnami

  # Builds image, which extends TimescaleDB image with PostGIS. Thus it depends on the job timescaledb.
  # The images are built only for amd64. Support for 32-bit needs to be investigated.
  # The images are built on top of TSL version only.
  timescaledb-postgis:

    name: PG${{ matrix.pg }}-postgis
    runs-on: ubuntu-latest
    needs: timescaledb
    strategy: 
      matrix:
        pg: [ 9.6, 10, 11, 12 ]

    steps:
    - uses: actions/checkout@v2

    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin

    - name: Build and push amd64 Docker image for TimescaleDB bitnami
      run: make push ORG=$ORG PG_VER=pg${{ matrix.pg }}
      working-directory: postgis
